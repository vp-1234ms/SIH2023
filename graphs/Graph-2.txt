import cv2
import numpy as np
import matplotlib.pyplot as plt

video_path ="Video Mag.mp4"
cap = cv2.VideoCapture(video_path)  # Replace 'input_video.mp4' with your video file

# Initialize the background subtractor
bg_subtractor = cv2.createBackgroundSubtractorMOG2()

# Lists to store amplitude of motion over time
time_frames = []
motion_amplitudes = []

frame_number = 0  # Initialize frame number

while True:
    ret, frame = cap.read()
    if not ret:
        break

    # Apply background subtraction to detect moving objects
    fg_mask = bg_subtractor.apply(frame)

    # Calculate the amplitude of motion
    motion_amplitude = np.sum(fg_mask)  # You can use different measures as needed

    # Append frame number and motion amplitude to lists
    frame_number += 1
    time_frames.append(frame_number)
    motion_amplitudes.append(motion_amplitude)


cap.release()

# Create a figure with multiple subplots to display different types of graphs
plt.figure(figsize=(12, 6))



# Plot 1: Line plot of motion amplitude over time
#p##lt.subplot(2, 2, )
plt.plot(time_frames, motion_amplitudes)
plt.xlabel('Frame Number')
plt.ylabel('Amplitude of Motion')
plt.title('Motion Amplitude Over Time (Line Plot)')


# Plot 2: Bar plot of motion amplitude over time
plt.bar(time_frames, motion_amplitudes)
plt.xlabel('Frame Number')
plt.ylabel('Amplitude of Motion')
plt.title('Motion Amplitude Over Time (Bar Plot)')

# Plot 3: Histogram of motion amplitudes
plt.hist(motion_amplitudes, bins=50, color='skyblue')
plt.xlabel('Amplitude of Motion')
plt.ylabel('Frequency')
plt.title('Histogram of Motion Amplitudes')

# Plot 4: Scatter plot of motion amplitude over time
plt.scatter(time_frames, motion_amplitudes, c='red', marker='x')
plt.xlabel('Frame Number')
plt.ylabel('Amplitude of Motion')
plt.title('Motion Amplitude Over Time (Scatter Plot)')
# Adjust subplot layout
plt.tight_layout()
# Show the plots
plt.show()